# EduAI Project - Unified Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NO LOCAL POSTGRESQL REQUIRED - Uses Supabase hosted database only

# ===== FRONTEND VARIABLES (Vite prefix required for client-side access) =====
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key

# ===== BACKEND VARIABLES =====

# Application Settings
APP_NAME=EduAI
VERSION=1.0.0
DEBUG=true
HOST=0.0.0.0
PORT=8000

# Security Settings (IMPORTANT: Generate a strong secret key for production)
SECRET_KEY=your-super-secret-key-here-generate-a-strong-one
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Supabase Configuration (Backend) - ONLY DATABASE NEEDED
# Note: These are the same URLs as VITE_ variables but without the prefix
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_KEY=your-supabase-service-role-key

# Google Gemini AI Configuration
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-2.0-flash
GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta

# CORS Settings (comma-separated list of allowed origins)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000

# Rate Limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# ===== OPTIONAL SETTINGS =====

# Redis Settings (for caching - optional)
# REDIS_URL=redis://localhost:6379

# Email Settings (for notifications - optional)
# SMTP_SERVER=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password

# AWS S3 Settings (for file storage - optional)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_BUCKET_NAME=eduai-storage
# AWS_REGION=us-east-1

# Logging Settings (optional)
# LOG_LEVEL=INFO
# LOG_FILE=logs/app.log

# Monitoring (optional)
# SENTRY_DSN=your-sentry-dsn

# ===== SETUP INSTRUCTIONS =====
# 1. Copy this file to .env (remove .example)
# 2. Create a Supabase project at https://supabase.com
# 3. Update SUPABASE_URL and SUPABASE_ANON_KEY with your Supabase project details
# 4. Add your GEMINI_API_KEY from Google AI Studio
# 5. Generate a strong SECRET_KEY for JWT tokens
# 6. Run: python backend/init_db.py to set up database tables
# 7. No local PostgreSQL installation required!